# haproxy.cfg
global
  log stdout format raw local0
  daemon

defaults 
    option forwardfor
    option http-server-close
    timeout connect 5s
    timeout client 1m
    timeout server 1m 

resolvers docker_resolver
    nameserver dns 127.0.0.11:53

frontend http
    mode http
    option httplog
    bind *:80
    bind *:443 ssl crt /etc/ssl/trahan.dev/haproxy_full.pem crt /etc/ssl/test.trahan.dev/ha_full.pem crt /etc/ssl/api.trahan.dev/ha_full.pem
    
    http-request redirect scheme https unless { ssl_fc }


    option forwardfor
    http-request add-header X-Forwarded-Proto https
    http-request add-header X-Forwarded-Port 443
    http-response add-header Strict-Transport-Security max-age=15768000
    http-request set-header X-Client-Certificate %[ssl_c_der,base64]



    acl react_front hdr(host) -i calc.test.trahan.dev
    acl go_api hdr(host) -i calc.api.trahan.dev
    acl git_tea hdr(host) -i git.trahan.dev
    acl portainer_back hdr(host) -i portainer.trahan.dev
    acl pgadm_back hdr(host) -i pgadmin.trahan.dev
    acl trahnas_back hdr(host) -i nas.trahan.dev
    acl prox1_back hdr(host) -i vm1.trahan.dev
    acl prox2_back hdr(host) -i vm2.trahan.dev
    acl trueold_back hdr(host) -i truenas.trahan.dev
    acl jelly_back hdr(host) -i jelly.trahan.dev
    acl guac_back hdr(host) -i guac.trahan.dev

    acl plex_back hdr(host) -i plex.trahan.dev
    #acl root_dir path_reg ^$|^/$
    #acl no_plex_header req.hdr_cnt(X-Plex-Device-Name) -i 0
    #http-request redirect code 301 location https://plex.trahan.dev/web/index.html if no_plex_header root_dir plex_back

    use_backend react if react_front
    use_backend goapi if go_api
    use_backend plexsrvs if plex_back
    use_backend giteasrv if git_tea
    use_backend portain if portainer_back
    use_backend pgadm if pgadm_back
    use_backend truenew if trahnas_back
    use_backend prox1 if prox1_back
    use_backend prox2 if prox2_back
    use_backend truenasold if trueold_back
    use_backend jell if jelly_back
    use_backend guaca if guac_back
frontend stats
    mode http
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST
    
backend react
    mode http

    server f1 frontend:80 resolvers docker_resolver init-addr none check
backend goapi
    mode http

    server b1 go-backend:8283 resolvers docker_resolver init-addr none
backend plexsrvs
    mode http

    server np1 nginxplex:443 weight 1 maxconn 8192 check ssl verify none resolvers docker_resolver init-addr none
    #server p2 10.0.1.99:32400
    #server p3 10.0.0.99:32400
backend guaca
    mode http

    server gu1 nginxplex:443 weight 1 maxconn 8192 check ssl verify none resolvers docker_resolver init-addr none
    #server p2 10.0.1.99:32400
    #server p3 10.0.0.99:32400
backend giteasrv
    mode http

    server git1 git-repo:3000 resolvers docker_resolver init-addr none
backend portain
    mode http

    server port1 portainersvc:9000 resolvers docker_resolver init-addr none
backend pgadm
    mode http

    server pg1 pg-dbadmin:80 resolvers docker_resolver init-addr none check maxconn 8192
backend truenew
    mode http

    server tr1 10.0.0.8:80 ssl verify none
backend prox1
    mode http

    server prx_one 10.0.0.50:8006 ssl verify none
backend prox2
    mode http

    server prx_two 10.0.0.9:8006 ssl verify none
backend truenasold
    mode http

    server tr2 10.0.0.12:80 ssl verify none
backend jell
    mode http

    server jsrv1 jellyfin:8096 resolvers docker_resolver init-addr none







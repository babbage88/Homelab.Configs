- name: install Postgres and setup Master
  hosts: "{{ ansible_limit | default(omit) }}"

  vars_files:
    - vault.yml
    - vars.yml

  handlers:
    - name: Restart postgresql
      ansible.builtin.systemd:
        name: postgresql
        state: restarted
      become: true

  tasks:

    - name: Add entries to pg_hba
      community.postgresql.postgresql_pg_hba:
        dest: "/etc/postgresql/{{ pg_version }}/main/pg_hba.conf"
        address: "{{ item.address | default(omit) }}"
        contype: "{{ item.contype }}"
        databases: "{{ item.databases }}"
        method: "{{ item.method }}"
        users: "{{ item.users }}"
      become: true
      become_user: postgres
      with_items: "{{ postgresql_hba_entries }}"
      notify:
        - Restart postgresql

    - name: Grant access to restored db
      become: yes
      become_user: postgres
      postgresql_privs:
        db: "{{ item.db_name }}"
        role: "{{ item.db_user }}"
        objs: ALL_IN_SCHEMA
        privs: SELECT,INSERT,UPDATE,DELETE
      with_items: "{{ seven_z_pw }}"

    - name: Grant access to restored db
      become: yes
      become_user: postgres
      postgresql_privs:
        db: "{{ item.k3s_db_name }}"
        role: "{{ item.k3s_db_user }}"
        objs: ALL_IN_SCHEMA
        privs: SELECT,INSERT,UPDATE,DELETE
      with_items: "{{ seven_z_pw }}"

    - name: Grant access to restored db
      become: yes
      become_user: postgres
      postgresql_privs:
        db: "{{ item.k3s_db_name }}"
        role: "{{ item.db_user }}"
        objs: ALL_IN_SCHEMA
        privs: SELECT,INSERT,UPDATE,DELETE
      with_items: "{{ seven_z_pw }}"





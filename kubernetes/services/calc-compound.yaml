apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 2 # Initial number of replicas
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: git.trahan.dev/jtrahan/calc-react:dev
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          value: "development"
        resources:
          limits:
            cpu: "500m" # 500 millicores (0.5 CPU)
            memory: "256Mi" # 256 MiB memory
          requests:
            cpu: "250m" # Request 0.25 CPU initially
            memory: "128Mi" # Request 128 MiB memory initially
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50 # Scale up if CPU usage exceeds 50%
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-backend
  labels:
    app: go-backend
spec:
  replicas: 2 # Initial number of replicas
  selector:
    matchLabels:
      app: go-backend
  template:
    metadata:
      labels:
        app: go-backend
    spec:
      containers:
      - name: go-backend
        image: git.trahan.dev/jtrahan/go-backend:dev
        ports:
        - containerPort: 8283
        resources:
          limits:
            cpu: "1" # 1 full CPU core
            memory: "512Mi" # 512 MiB memory
          requests:
            cpu: "500m" # Request 0.5 CPU initially
            memory: "256Mi" # Request 256 MiB memory initially
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: go-backend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: go-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50 # Scale up if CPU usage exceeds 50%
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 3001
  selector:
    app: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: go-backend-service
spec:
  type: NodePort
  ports:
  - port: 8283
    targetPort: 8283
    nodePort: 8283
  selector:
    app: go-backend
